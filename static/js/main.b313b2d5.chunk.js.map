{"version":3,"sources":["components/Day.js","components/DaysContainer.js","components/Week.js","components/Month.js","App.js","index.js"],"names":["DayStyles","styled","div","props","isSelected","isIncludedInSelection","Day","onClick","handleClick","day","DaysContainerStyles","firstDay","DaysContainer","date","startDate","endDate","getTime","days","i","Date","currentYear","currentMonth","push","key","populateDays","WeekStyles","Week","MonthStyles","months","Month","className","changeMonth","value","getDate","getDay","GlobalStyle","createGlobalStyle","MainStyle","picker","App","getCurrentDate","year","getFullYear","month","getMonth","setState","currentDate","setCurrentMonthAndYear","state","e","clickedDate","target","textContent","dateArr","toString","split","startDateString","endDateString","handleInputClick","id","showPicker","this","htmlFor","type","placeholder","autoFocus","readOnly","Component","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b313b2d5.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst DayStyles = styled.div`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 30px;\n  padding: 10px;\n  :hover {\n    background: #3bf5ff;\n  }\n  transition: all 0.3s;\n  background: ${props => {\n    if (props.isSelected) {\n      return \"#ff4f98\";\n    } else if (props.isIncludedInSelection) {\n      return \"#ff96c2\";\n    } else {\n      return \"transparent\";\n    }\n  }};\n`;\n\nconst Day = props => {\n  return (\n    <DayStyles\n      isSelected={props.isSelected}\n      isIncludedInSelection={props.isIncludedInSelection}\n      onClick={props.handleClick}\n    >\n      {props.day}\n    </DayStyles>\n  );\n};\n\nexport default Day;\n","import React from \"react\";\nimport Day from \"./Day\";\nimport styled from \"styled-components\";\n\nconst DaysContainerStyles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  div:first-child {\n    grid-column: ${props => props.firstDay + 1};\n  }\n`;\n\nconst DaysContainer = props => {\n  const isIncludedInSelection = date => {\n    if (date > props.startDate && date < props.endDate) {\n      return true;\n    }\n    return false;\n  };\n\n  const isSelected = date => {\n    if (!props.startDate && !props.endDate) return false;\n    else if (!props.endDate && props.startDate) {\n      return props.startDate.getTime() === date.getTime();\n    } else if (!props.startDate && props.endDate) {\n      return props.endDate.getTime() === date.getTime();\n    } else {\n      return (\n        props.startDate.getTime() === date.getTime() ||\n        props.endDate.getTime() === date.getTime()\n      );\n    }\n  };\n  const populateDays = () => {\n    let days = [];\n    for (let i = 1; i <= props.days; i++) {\n      const date = new Date(props.currentYear, props.currentMonth, i);\n      days.push(\n        <Day\n          handleClick={props.handleClick}\n          isIncludedInSelection={isIncludedInSelection(date)}\n          isSelected={isSelected(date)}\n          day={i}\n          key={date}\n        />\n      );\n    }\n    return days;\n  };\n\n  return (\n    <DaysContainerStyles firstDay={props.firstDay}>\n      {populateDays()}\n    </DaysContainerStyles>\n  );\n};\n\nexport default DaysContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst WeekStyles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  width: 400px;\n  color: #aaa;\n`;\n\nconst Week = props => (\n  <WeekStyles>\n    <p>Su</p>\n    <p>Mo</p>\n    <p>Tu</p>\n    <p>We</p>\n    <p>Th</p>\n    <p>Fr</p>\n    <p>Sa</p>\n  </WeekStyles>\n);\n\nexport default Week;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport DaysContainer from \"./DaysContainer\";\nimport Week from \"./Week\";\n\nconst MonthStyles = styled.div`\n  width: 400px;\n  font-size: 1rem;\n  border: solid 1px #bfbfbf;\n  padding: 20px;\n  -webkit-box-shadow: 6px 7px 5px -4px rgba(199, 199, 199, 1);\n  -moz-box-shadow: 6px 7px 5px -4px rgba(199, 199, 199, 1);\n  box-shadow: 6px 7px 5px -4px rgba(199, 199, 199, 1);\n  h1 {\n    display: inline;\n    margin: 0 20px;\n  }\n  .title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin: 20px 0;\n  }\n  button {\n    border: none;\n    font-size: 2rem;\n    transition: all 0.3s;\n  }\n  button:hover {\n    color: #ff96c2;\n  }\n`;\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\nconst Month = props => {\n  const calculateDaysInMonth = () => {\n    //add one to the month because it calculates the last day of the previous month\n    return new Date(props.currentYear, props.currentMonth + 1, 0).getDate();\n  };\n\n  const getFirstDayOfMonth = () => {\n    return new Date(props.currentYear, props.currentMonth, 1).getDay();\n  };\n\n  return (\n    <MonthStyles>\n      <div className=\"title\">\n        <button className=\"button-left\" onClick={props.changeMonth} value=\"<\">\n          {\"<\"}\n        </button>\n        <h1>{`${months[props.currentMonth]} ${props.currentYear}`}</h1>\n        <button className=\"button-right\" onClick={props.changeMonth} value=\">\">\n          {\">\"}\n        </button>\n      </div>\n      <Week />\n      <DaysContainer\n        days={calculateDaysInMonth()}\n        firstDay={getFirstDayOfMonth()}\n        handleClick={props.handleClick}\n        currentMonth={props.currentMonth}\n        currentYear={props.currentYear}\n        startDate={props.startDate}\n        endDate={props.endDate}\n      />\n    </MonthStyles>\n  );\n};\n\nexport default Month;\n","import React, { Component } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Month from \"./components/Month\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: sans-serif;\n    text-align: center;\n    font-size: 10px;\n    box-sizing: border-box;\n  }\n`;\n\nconst MainStyle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  margin: 200px 0;\n  label {\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    width: 400px;\n  }\n  input {\n    margin: 0 20px;\n    padding: 20px;\n    font-size: 16px;\n  }\n  .inputs {\n    font-size: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    min-width: 100%;\n    margin-bottom: 30px;\n  }\n  #start {\n    border: ${props =>\n      props.picker === \"start\" ? \"solid 1px #ff4f98\" : \"solid 1px #bfbfbf\"};\n  }\n  #end {\n    border: ${props =>\n      props.picker === \"end\" ? \"solid 1px #ff4f98\" : \"solid 1px #bfbfbf\"};\n  }\n`;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentDate: new Date(),\n      startDate: \"\",\n      endDate: \"\",\n      currentMonth: \"\",\n      currentYear: \"\",\n      startDateString: \"\",\n      endDateString: \"\",\n      picker: \"\",\n      showPicker: false\n    };\n  }\n\n  getCurrentDate = () => {\n    let date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    date = new Date(year, month, day);\n    this.setState({\n      currentDate: date\n    });\n  };\n\n  setCurrentMonthAndYear = () => {\n    this.setState({\n      currentMonth: this.state.currentDate.getMonth(),\n      currentYear: this.state.currentDate.getFullYear()\n    });\n  };\n\n  componentDidMount() {\n    this.getCurrentDate();\n    this.setCurrentMonthAndYear();\n  }\n\n  handleClick = e => {\n    let clickedDate = new Date(\n      this.state.currentYear,\n      this.state.currentMonth,\n      e.target.textContent\n    );\n    let dateArr = clickedDate.toString().split(\" \");\n    if (clickedDate < this.state.currentDate) return;\n    switch (this.state.picker) {\n      case \"start\":\n        this.setState({\n          startDateString: `${dateArr[0]}, ${dateArr[1]} ${dateArr[2]}`,\n          startDate: clickedDate,\n          picker: \"end\",\n          endDate: clickedDate > this.state.endDate ? \"\" : this.state.endDate,\n          endDateString:\n            clickedDate > this.state.endDate ? \"\" : this.state.endDateString\n        });\n        break;\n      case \"end\":\n        if (this.state.startDate && clickedDate < this.state.startDate) {\n          this.setState({\n            startDateString: `${dateArr[0]}, ${dateArr[1]} ${dateArr[2]}`,\n            startDate: clickedDate,\n            picker: \"end\"\n          });\n        } else {\n          this.setState({\n            endDateString: `${dateArr[0]}, ${dateArr[1]} ${dateArr[2]}`,\n            endDate: !this.state.startDate ? \"\" : clickedDate,\n            startDate: !this.state.startDate\n              ? clickedDate\n              : this.state.startDate\n          });\n        }\n        break;\n      default:\n    }\n  };\n\n  handleInputClick = e => {\n    if (e.target.id === \"start\") {\n      this.setState({ picker: \"start\", showPicker: true });\n    } else if (e.target.id === \"end\") {\n      this.setState({ picker: \"end\", showPicker: true });\n    }\n  };\n\n  changeMonth = e => {\n    if (e.target.value === \"<\") {\n      if (this.state.currentMonth === 0) {\n        this.setState({\n          //go to december\n          currentMonth: 11,\n          currentYear: this.state.currentYear - 1\n        });\n      } else {\n        this.setState({ currentMonth: this.state.currentMonth - 1 });\n      }\n    } else if (e.target.value === \">\") {\n      if (this.state.currentMonth === 11) {\n        this.setState({\n          //go to january\n          currentMonth: 0,\n          currentYear: this.state.currentYear + 1\n        });\n      } else {\n        this.setState({ currentMonth: this.state.currentMonth + 1 });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <MainStyle picker={this.state.picker}>\n        <div className=\"inputs\">\n          <label htmlFor=\"start\">\n            Start\n            <input\n              type=\"text\"\n              placeholder=\"mm/dd/yy\"\n              id=\"start\"\n              value={this.state.startDateString}\n              onClick={this.handleInputClick}\n              autoFocus={this.state.picker === \"start\"}\n              readOnly\n            />\n          </label>\n          <label htmlFor=\"end\">\n            End\n            <input\n              type=\"text\"\n              placeholder=\"mm/dd/yy\"\n              id=\"end\"\n              value={this.state.endDateString}\n              onClick={this.handleInputClick}\n              autoFocus={this.state.picker === \"end\"}\n              readOnly\n            />\n          </label>\n        </div>\n        {this.state.showPicker ? (\n          <Month\n            handleClick={this.handleClick}\n            changeMonth={this.changeMonth}\n            currentMonth={this.state.currentMonth}\n            currentYear={this.state.currentYear}\n            startDate={this.state.startDate}\n            endDate={this.state.endDate}\n          />\n        ) : null}\n\n        <GlobalStyle />\n      </MainStyle>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(<App />, root);\n"],"sourceRoot":""}