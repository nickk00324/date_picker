{"version":3,"sources":["components/Day.js","components/DaysContainer.js","components/Week.js","components/Month.js","App.js","index.js"],"names":["DayStyles","styled","div","props","isSelected","isIncludedInSelection","Day","onClick","handleClick","day","DaysContainerStyles","firstDay","DaysContainer","date","startDate","endDate","getTime","days","i","Date","currentYear","currentMonth","push","key","populateDays","WeekStyles","Week","MonthStyles","months","Month","className","changeMonth","value","getDate","getDay","GlobalStyle","createGlobalStyle","MainStyle","picker","App","e","clickedDate","state","target","textContent","dateArr","toString","split","setState","startDateString","endDateString","handleInputClick","id","showPicker","getMonth","getFullYear","this","htmlFor","type","placeholder","autoFocus","readOnly","Component","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.83267219.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst DayStyles = styled.div`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 30px;\n  padding: 10px;\n  :hover {\n    background: #3bf5ff;\n  }\n  transition: all 0.3s;\n  background: ${props => {\n    if (props.isSelected) {\n      return \"#ff4f98\";\n    } else if (props.isIncludedInSelection) {\n      return \"#ff96c2\";\n    } else {\n      return \"transparent\";\n    }\n  }};\n`;\n\nconst Day = props => {\n  return (\n    <DayStyles\n      isSelected={props.isSelected}\n      isIncludedInSelection={props.isIncludedInSelection}\n      onClick={props.handleClick}\n    >\n      {props.day}\n    </DayStyles>\n  );\n};\n\nexport default Day;\n","import React from \"react\";\nimport Day from \"./Day\";\nimport styled from \"styled-components\";\n\nconst DaysContainerStyles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  div:first-child {\n    grid-column: ${props => props.firstDay + 1};\n  }\n`;\n\nconst DaysContainer = props => {\n  const isIncludedInSelection = date => {\n    if (date > props.startDate && date < props.endDate) {\n      return true;\n    }\n    return false;\n  };\n\n  const isSelected = date => {\n    if (!props.startDate && !props.endDate) return false;\n    else if (!props.endDate && props.startDate) {\n      return props.startDate.getTime() === date.getTime();\n    } else if (!props.startDate && props.endDate) {\n      return props.endDate.getTime() === date.getTime();\n    } else {\n      return (\n        props.startDate.getTime() === date.getTime() ||\n        props.endDate.getTime() === date.getTime()\n      );\n    }\n  };\n  const populateDays = () => {\n    let days = [];\n    for (let i = 1; i <= props.days; i++) {\n      const date = new Date(props.currentYear, props.currentMonth, i);\n      days.push(\n        <Day\n          handleClick={props.handleClick}\n          isIncludedInSelection={isIncludedInSelection(date)}\n          isSelected={isSelected(date)}\n          day={i}\n          key={date}\n        />\n      );\n    }\n    return days;\n  };\n\n  return (\n    <DaysContainerStyles firstDay={props.firstDay}>\n      {populateDays()}\n    </DaysContainerStyles>\n  );\n};\n\nexport default DaysContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst WeekStyles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  width: 400px;\n  color: #aaa;\n`;\n\nconst Week = props => (\n  <WeekStyles>\n    <p>Su</p>\n    <p>Mo</p>\n    <p>Tu</p>\n    <p>We</p>\n    <p>Th</p>\n    <p>Fr</p>\n    <p>Sa</p>\n  </WeekStyles>\n);\n\nexport default Week;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport DaysContainer from \"./DaysContainer\";\nimport Week from \"./Week\";\n\nconst MonthStyles = styled.div`\n  width: 400px;\n  font-size: 1rem;\n  border: solid 1px #bfbfbf;\n  padding: 20px;\n  -webkit-box-shadow: 6px 7px 5px -4px rgba(199, 199, 199, 1);\n  -moz-box-shadow: 6px 7px 5px -4px rgba(199, 199, 199, 1);\n  box-shadow: 6px 7px 5px -4px rgba(199, 199, 199, 1);\n  h1 {\n    display: inline;\n    margin: 0 20px;\n  }\n  .title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin: 20px 0;\n  }\n  button {\n    border: none;\n    font-size: 2rem;\n    transition: all 0.3s;\n  }\n  button:hover {\n    color: #ff96c2;\n  }\n`;\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\nconst Month = props => {\n  const calculateDaysInMonth = () => {\n    //add one to the month because it calculates the last day of the previous month\n    return new Date(props.currentYear, props.currentMonth + 1, 0).getDate();\n  };\n\n  const getFirstDayOfMonth = () => {\n    return new Date(props.currentYear, props.currentMonth, 1).getDay();\n  };\n\n  return (\n    <MonthStyles>\n      <div className=\"title\">\n        <button className=\"button-left\" onClick={props.changeMonth} value=\"<\">\n          {\"<\"}\n        </button>\n        <h1>{`${months[props.currentMonth]} ${props.currentYear}`}</h1>\n        <button className=\"button-right\" onClick={props.changeMonth} value=\">\">\n          {\">\"}\n        </button>\n      </div>\n      <Week />\n      <DaysContainer\n        days={calculateDaysInMonth()}\n        firstDay={getFirstDayOfMonth()}\n        handleClick={props.handleClick}\n        currentMonth={props.currentMonth}\n        currentYear={props.currentYear}\n        startDate={props.startDate}\n        endDate={props.endDate}\n      />\n    </MonthStyles>\n  );\n};\n\nexport default Month;\n","import React, { Component } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Month from \"./components/Month\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: sans-serif;\n    text-align: center;\n    font-size: 10px;\n    box-sizing: border-box;\n  }\n`;\n\nconst MainStyle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  margin: 200px 0;\n  label {\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    width: 400px;\n  }\n  input {\n    margin: 0 20px;\n    padding: 20px;\n    font-size: 16px;\n  }\n  .inputs {\n    font-size: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    min-width: 100%;\n    margin-bottom: 30px;\n  }\n  #start {\n    border: ${props =>\n      props.picker === \"start\" ? \"solid 1px #ff4f98\" : \"solid 1px #bfbfbf\"};\n  }\n  #end {\n    border: ${props =>\n      props.picker === \"end\" ? \"solid 1px #ff4f98\" : \"solid 1px #bfbfbf\"};\n  }\n`;\n\nconst date = new Date();\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: \"\",\n      endDate: \"\",\n      currentMonth: date.getMonth(),\n      currentYear: date.getFullYear(),\n      startDateString: \"\",\n      endDateString: \"\",\n      picker: \"\",\n      showPicker: false\n    };\n  }\n\n  handleClick = e => {\n    let clickedDate = new Date(\n      this.state.currentYear,\n      this.state.currentMonth,\n      e.target.textContent\n    );\n    let dateArr = clickedDate.toString().split(\" \");\n    if (clickedDate < date) return;\n    if (this.state.picker === \"start\") {\n      this.setState({\n        startDateString: `${dateArr[0]}, ${dateArr[1]} ${dateArr[2]}`,\n        startDate: clickedDate,\n        picker: \"end\",\n        endDate: clickedDate > this.state.endDate ? \"\" : this.state.endDate,\n        endDateString:\n          clickedDate > this.state.endDate ? \"\" : this.state.endDateString\n      });\n    } else if (this.state.picker === \"end\") {\n      this.setState({\n        endDateString: `${dateArr[0]}, ${dateArr[1]} ${dateArr[2]}`,\n        endDate: !this.state.startDate ? \"\" : clickedDate,\n        startDate: !this.state.startDate ? clickedDate : this.state.startDate\n      });\n    }\n  };\n\n  handleInputClick = e => {\n    if (e.target.id === \"start\") {\n      this.setState({ picker: \"start\", showPicker: true });\n    } else if (e.target.id === \"end\") {\n      this.setState({ picker: \"end\", showPicker: true });\n    }\n  };\n\n  changeMonth = e => {\n    if (e.target.value === \"<\") {\n      if (this.state.currentMonth === 0) {\n        this.setState({\n          //go to december\n          currentMonth: 11,\n          currentYear: this.state.currentYear - 1\n        });\n      } else {\n        this.setState({ currentMonth: this.state.currentMonth - 1 });\n      }\n    } else if (e.target.value === \">\") {\n      if (this.state.currentMonth === 11) {\n        this.setState({\n          //go to january\n          currentMonth: 0,\n          currentYear: this.state.currentYear + 1\n        });\n      } else {\n        this.setState({ currentMonth: this.state.currentMonth + 1 });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <MainStyle picker={this.state.picker}>\n        <div className=\"inputs\">\n          <label htmlFor=\"start\">\n            Start\n            <input\n              type=\"text\"\n              placeholder=\"mm/dd/yy\"\n              id=\"start\"\n              value={this.state.startDateString}\n              onClick={this.handleInputClick}\n              autoFocus={this.state.picker === \"start\"}\n              readOnly\n            />\n          </label>\n          <label htmlFor=\"end\">\n            End\n            <input\n              type=\"text\"\n              placeholder=\"mm/dd/yy\"\n              id=\"end\"\n              value={this.state.endDateString}\n              onClick={this.handleInputClick}\n              autoFocus={this.state.picker === \"end\"}\n              readOnly\n            />\n          </label>\n        </div>\n        {this.state.showPicker ? (\n          <Month\n            handleClick={this.handleClick}\n            changeMonth={this.changeMonth}\n            currentMonth={this.state.currentMonth}\n            currentYear={this.state.currentYear}\n            startDate={this.state.startDate}\n            endDate={this.state.endDate}\n          />\n        ) : null}\n\n        <GlobalStyle />\n      </MainStyle>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(<App />, root);\n"],"sourceRoot":""}